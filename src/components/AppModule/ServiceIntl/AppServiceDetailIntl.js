import {defineIntlMessages} from '../../../common/tools'

export const mapData = {
  prefix: 'AppModule.AppServiceDetailIntl',
  data: {
    redeploy: '重新部署',
    loginTerminal: '登录终端',
    deleteOperation: '删除操作',
    deleteServiceinfo: '删除服务，该服务下的自动弹性伸缩策略也会被删除，确定要删除服务{serviceName}吗?',
    serviceDetailPage: '服务详情页',
    status: '状态',
    address: '地址',
    containerObject: '容器实例',
    serviceAbout: '服务相关',
    basicsMessage: '基础信息',
    serviceMeshSwitch: '服务治理开关',
    assistSet: '辅助设置',
    configGroup: '配置组',
    fireWall: '安全组(防火墙)',
    unsupportbindDomain: '当前代理不支持绑定域名',
    visitStyle: '访问方式',
    port: '端口',
    currentProxynosupportHTTPS: '当前代理不支持设置 HTTPS',
    setHTTPS: '设置 HTTPS',
    livenessprobe: '高可用',
    monitor: '监控',
    strategy: '告警策略',
    autoScale: '自动伸缩',
    logs: '日志',
    events: '事件',
    rentalInfo: '租赁信息',
    serverTag: '服务标签',
    confirmPublished: '正在灰度发布，该服务暂不能做滚动发布操作',
    confirmPublishedAfter: ' 确认发布完成或确认发布回滚后方可进行下一次发布',
    AtleastVersion: '请至少为一个容器指定目标版本',
    fillin260stimes: '请填写 2~60s 间隔时间',
    fillin260sNumbers: '请填入 2~60 之间的数字',
    saving: '正在保存中...',
    servicePublishRoll: '服务 {serviceName} 滚动发布中...',
    servicePublishSuccess: '服务 {serviceName} 滚动发布已成功开启',
    servicePublishFailure: '服务 {serviceName} 开启滚动发布失败',
    rollPublish: '滚动发布',
    k8sContainerRollPublish: '提示: 检测到您的服务实例为k8s多容器 (Pod内多个容器) 实例,选择滚动发布时请确认下列服务实例中要升级的容器',
    noSupportRollPublish: 'Tips：挂载独享型存储的服务不支持滚动发布',
    rollPublishAlertRow: '滚动发布是指将应用完全更新为下面所选的目标版本，可升级也可回滚版本',
    serviceName: '服务名称',
    mirrorVersion: '镜像版本',
    appPackage: '应用包',
    targetVersion: '目标版本',
    pleaseChoiceVersion: '请选择目标版本',
    updateIntervalTime: '更新间隔时间',
    updateIntervalTimeInfo: '容器实例升级时间间隔，例如若为 0 秒，则 Pod 在 Ready 后就会被认为是可用状态，继续升级',
    suggest260s: '建议 2~60s',
    servicePrivateCache: '服务已挂载独享型存储，不能做灰度发布操作',
    serviceOneInstance:'服务只有 1 个实例，不能做灰度发布操作',
    greyPublish: '灰度发布',
    publishreroll: '发布回滚',
    openServiceSuccess: '服务 {serviceName} {msg}已成功开启',
    openServiceFailure: '服务 {serviceName} 开启{msg}失败',
    pleaseChoiceVersionNumber: '请选择目标版本数量',
    writeUpdateTimeInterval: '请填写更新间隔',
    confirmPublishreRool: '确认发布回滚',
    confirmPublishfinish: '确认发布完成',
    greyPublishInfo: '灰度发布，应用新老版本之间的平滑过渡，发布新版本时不直接替换旧版本，经过一段时间的版本共存来灰度验证。',
    greyPublishInfoStrong: '选择灰度发布后，在「灰度发布」期间不能进行「滚动发布」',
    allObjectNumber: '总实例数',
    greyPublishingInfo: '在灰度过程中，会有一个当前版本的过渡实例存在，灰度完成或回滚将删除该过渡实例',
    currentVersion: '当前版本',
    reRollReBuild: '目标版本实例减少，回滚只确保最终状态为该比例，期间当前版本实例会删除重建',
    targetVersion:'目标版本',
    choicegreyVersion: '选择灰度版本',
    plusOneObject: '+1 个过渡实例',
    updateInterval: '更新间隔',
    upgradeObjectInfo: '容器实例升级时间间隔，例如若为 0 秒，则 Pod 在 Ready 后就会被认为是可用状态，继续升级',
    suggest260s: '建议 2~60s',
    changeConfig: '服务 {serviceName} 配置更改中...',
    changeConfigSuccess: '服务 {serviceName} 配置已成功更改',
    changeConfigFailure: '更改服务 {serviceName} 配置失败',
    changeServiceConfig: '更改服务配置',
    choiceConfig: '选择配置',
    x86caculate: 'X86 计算',
    highPerformancecalculate:'高性能计算 GPU',
    rebootAllServiceInfo: ' Tips：重新选择配置 , 保存后系统将重启该服务的所有实例',
    serviceNotSupportReboot: '此服务已挂载存储卷，不支持滚动更新，服务会有短暂不可用时间！',
    rollupUpgrade: '将进行滚动升级。'
  }
}

export default defineIntlMessages(mapData)